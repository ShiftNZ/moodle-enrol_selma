# QUICK SETUP:
# Install Runner `brew install gitlab-runner` & `brew services start gitlab-runner` - https://docs.gitlab.com/runner/install/
# Install Docker - `brew cask install docker`
# Run Docker via GUI
# Run `gitlab-runner exec docker <job>`
# More info in ./doc/development.md

variables:
  DB: "mysqli"
  TRAVIS_BUILD_DIR: "$CI_PROJECT_DIR"
  IGNORE_PATHS: "vendor,node_modules"
  PHPUNIT_IGNORE_PATHS: "$IGNORE_PATHS,cli"

cache:
  paths:
    - $HOME/.composer/cache
    - $HOME/.npm

before_script:
  - apt update && apt install git-core default-mysql-server npm -y > /dev/null
  - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
  - source ~/.bashrc
  - nvm install 14.0.0
  - nvm use 14.0.0
  - service mysql start
  - cd $CI_PROJECT_DIR/..
  - curl -sS https://getcomposer.org/installer | php
  - mv composer.phar /usr/local/bin/composer
  # Cleaning up.
  - echo "Trying to remove ./ci" && rm -rf $CI_PROJECT_DIR/ci
  - composer create-project --no-interaction --no-dev --prefer-dist --quiet blackboard-open-source/moodle-plugin-ci ci ^2
  - export PATH="$(cd ci/bin; pwd):$(cd ci/vendor/bin; pwd):$PATH"
  # Cleaning up.
  - echo "Trying to remove ./moodle" && rm -rf $CI_PROJECT_DIR/moodle
  # Setting auth type to mysqlnative - essential for phpdoc to work, but probs good (for testing) anyway...
  # Credit: https://stackoverflow.com/questions/39281594/error-1698-28000-access-denied-for-user-rootlocalhost
  - mysql -e 'USE mysql; SELECT User, Host, plugin FROM mysql.user; UPDATE user SET plugin="mysql_native_password" WHERE User="root"; FLUSH PRIVILEGES; SELECT User, Host, plugin FROM mysql.user;'
  - service mysql restart
  # Change localhost to 127.0.0.1 for phpdoc.
  - moodle-plugin-ci install --db-host=127.0.0.1 -v

.job_template: &job_definition
  script:
    - EXIT_STATUS=0
    - moodle-plugin-ci phplint || EXIT_STATUS=$? ; echo "EXIT STATUS - $EXIT_STATUS"
    - moodle-plugin-ci phpcpd || EXIT_STATUS=$? ; echo "EXIT STATUS - $EXIT_STATUS"
    - moodle-plugin-ci phpmd || EXIT_STATUS=$? ; echo "EXIT STATUS - $EXIT_STATUS"
    - moodle-plugin-ci phpdoc || EXIT_STATUS=$? ; echo "EXIT STATUS - $EXIT_STATUS"
    - moodle-plugin-ci phpunit --coverage-text -vvv || EXIT_STATUS=$? ; echo "EXIT STATUS - $EXIT_STATUS"
    - moodle-plugin-ci codechecker || EXIT_STATUS=$? ; echo "EXIT STATUS - $EXIT_STATUS"
    - moodle-plugin-ci validate || EXIT_STATUS=$? ; echo "EXIT STATUS - $EXIT_STATUS"
    - moodle-plugin-ci grunt -t css || EXIT_STATUS=$? ; echo "EXIT STATUS - $EXIT_STATUS" # Thanks https://github.com/open-lms-open-source/moodle-plugin-ci/issues/72#issuecomment-358426352
    #    - moodle-plugin-ci savepoints || EXIT_STATUS=$? ; echo "EXIT STATUS - $(tput bold)$EXIT_STATUS$(tput sgr0)"
    - exit $EXIT_STATUS

# Test each active version of PHP.
job1:
  <<: *job_definition
  image: moodlehq/moodle-php-apache:7.2
  variables:
    MOODLE_BRANCH: "MOODLE_35_STABLE"

job2:
  <<: *job_definition
  image: moodlehq/moodle-php-apache:7.3
  variables:
    MOODLE_BRANCH: "MOODLE_35_STABLE"

# Only test the earliest and latest supported version of Moodle.
job3:
  <<: *job_definition
  image: moodlehq/moodle-php-apache:7.4
  variables:
    MOODLE_BRANCH: "MOODLE_39_STABLE"